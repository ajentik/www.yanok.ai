# GitHub Actions workflow for building and deploying Next.js site to GitHub Pages
name: Deploy Next.js Site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [master]
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install
          
          # Debug information for lightningcss
          echo "Node architecture: $(node -p "process.arch")"
          echo "Node platform: $(node -p "process.platform")"
          echo "Looking for lightningcss binaries..."
          find node_modules/lightningcss -name "*.node" || echo "No binary found"
          
          # Try multiple approaches to get the correct binary
          echo "Rebuilding lightningcss with explicit platform..."
          npm rebuild lightningcss --platform=linux --arch=x64 || echo "Rebuild failed, trying alternative approaches"
          
          echo "Direct installation of lightningcss..."
          npm install lightningcss@latest --platform=linux --arch=x64 --target_platform=linux --target_arch=x64 --target_libc=glibc
          
          # Check if the binary exists after our attempts
          echo "Checking if binary exists now..."
          find node_modules/lightningcss -name "*.node" || echo "Still no binary found"
          
          # Create required symlinks if needed
          echo "Setting up any needed symlinks..."
          if [ -f "node_modules/lightningcss/lightningcss.linux-x64-gnu.node" ]; then
            echo "Binary exists, proceeding with build"
          elif [ -f "node_modules/lightningcss/lightningcss-linux-x64.node" ]; then
            echo "Found alternative binary, creating symlink"
            ln -sf "node_modules/lightningcss/lightningcss-linux-x64.node" "node_modules/lightningcss/lightningcss.linux-x64-gnu.node"
          fi

      - name: Run tests
        run: npm run test --if-present

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      
      - name: Build with Next.js
        run: |
          echo "Node version: $(node -v)"
          echo "NPM version: $(npm -v)"
          echo "Starting build with CI optimizations..."
          CI=true npm run build:ci || (echo "Standard build failed, trying fallback approach..." && CI=true NODE_OPTIONS="--max_old_space_size=8192" NEXT_DISABLE_OPTIMIZED_LOADING=true npm run build)
        env:
          NEXT_PUBLIC_BASE_PATH: ${{ steps.pages.outputs.base_path }}
          # Skip telemetry during builds
          NEXT_TELEMETRY_DISABLED: 1

      - name: Disable Jekyll
        run: touch out/.nojekyll
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out # Next.js static export output directory

  # Deployment job
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
